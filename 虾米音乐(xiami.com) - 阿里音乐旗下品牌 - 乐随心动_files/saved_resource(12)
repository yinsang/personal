var signOnce = true;
$(function () {

	// 等级浮层
	$('#user').on('mouseover', '.level a', function() {
		$('#user .level_popup').show();
	}).mouseout(function() {
		$('#user .level_popup').hide();
	});

	// 签到
	$('#user').on('click', '.tosign', function() {
		var that = $(this);
		if (signOnce) {
			$.post('/task/signin', function(data) {
				that.addClass('done').text(data+'天');
				signOnce = false;
			});
		}
	}).on('mouseover', '.tosign', function() {
		$('#user .checkin_popup').show();
	}).on('mouseout', '.tosign', function() {
		$('#user .checkin_popup').hide();
	});

});/**
 * 赞这条分享
 * @param {Object} elem DOM节点
 */
var likeShare = function(elem) {
	var that = $(elem);
	var url = that.attr('href');
	if(that.data('status') == 1 || that.hasClass('praised')) {
		return false;
	}
	$.ajax({
		dataType: 'json',
		url: url,
		beforeSend: function() {
			that.addClass('praisdLoad');
		},
		success: function(data) {
			if (data.status=='success') {
				that.poshytip('update', data.message, true).poshytip('show');
				that.poshytip({
					content:'已赞过'
				});
				that.removeClass('praisdLoad').addClass('praised');
				that.parentsUntil('.extra', '.container').find('.praise_count').text(parseInt(that.parentsUntil('.extra', '.container').find('.praise_count').text())+1).addClass('done');
			}
			else {
				that.poshytip('update', data.message).poshytip('show');
				that.removeClass('praisdLoad').addClass('praised');
			}
		},
		error: function() {
			$(elem).poshytip('update', '失败，请重试').poshytip('show');
			that.removeClass('praisdLoad');
		}
	});
	return false;
};

/**
 * 发表评论
 * @param {document} elem
 */
var commentfeed = function(elem){
	var form = $(elem);
	var url = form.data('url');
	$.ajax({
		url: url,
		data: form.serialize(),
		dataType: 'json',
		success: function(data){
			var obj = data.data;
			if (data.status=='success'){
				form.find('input[name="content"]').val('');
				form.parentsUntil('.extra', '.container').find('.comment_count').text(parseInt(form.parentsUntil('.extra', '.container').find('.comment_count').text())+1).addClass('done');

			}
			else {
				alert(data.message);
			}
		}
	});
	return false;
};

$(function() {

	var index, loadDelay = [], hideDelay = [];
	$('.primary').on('mouseenter', '#timeline .item', function() {
		index = $(this).index();
		$(this).find('.main em').hide();
		$(this).find('.toplay').show();
		//if ($(this).index()<4) {
			//$(this).find('.extra').css({'top':'0', 'bottom':''}).show();
		//}
		//else {
			//$(this).find('.extra').css({'top':'', 'bottom':'0'}).show();
		//}

		var item = $(this),
			id = item.data('id'),
			uid = item.data('uid'),
			artist = item.data('artist'),
			content = $(this).find('.extra');

		clearTimeout(hideDelay[index]);
		loadDelay[index] = setTimeout(function() {

			if (content.find('.loading').length) {
				$.ajax({
					url : '/fresh/minifeed',
					type : 'get',
					data : {'id':id, 'uid':uid, 'artist':artist},
					success : function(data) {
						content.find('.container').html(data);
						/* autosuggest */
						content.find('input[node-type="autoSuggest"]').autoSuggest('/relation/fetch', uid);
					}
				});
			}

			content.show();

		}, 200);


	}).on('mouseleave', '#timeline .item', function() {
		var self = $(this);
		self.find('.main em').show();
		self.find('.toplay').hide();

		clearTimeout(loadDelay[index]);
		hideDelay[index] = setTimeout(function() {
			self.find('.extra').hide();
		}, 200);
		/* autosuggest */
		//$('.autoSuggestList').hide();
	});

	/***
	*赞的hover效果
	***/
	$('#timeline .comment_like a').poshytip({
		liveEvents: true,
		className: 'tip-twitter',
		showTimeout: 1,
		alignTo: 'target',
		alignX: 'center',
		offsetY: 8,
		allowTipHover: false
	});

});﻿/*! 2013年5月13日 15:11:33 */
;$(function(){
	var _cursorUtils = {
		timer			: null,
		targetElem		: null,
		txtShadow		: "<div class='textareaShadow'></div>",
		txtShadowElem	: [],
		listWrap		: "<div class='autoSuggestWrap'></div>",
		listWrapElem	: [],
		curIndex		: 0,
		primaryStyles	: [ 'fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'letterSpacing',
							'paddingLeft', 'paddingTop', 'paddingBottom', 'paddingRight',
							'marginLeft', 'marginTop', 'marginBottom', 'marginRight',
							'borderLeftColor', 'borderTopColor', 'borderBottomColor', 'borderRightColor',
							'borderLeftStyle', 'borderTopStyle', 'borderBottomStyle', 'borderRightStyle',
							'borderLeftWidth', 'borderTopWidth', 'borderBottomWidth', 'borderRightWidth',
							'line-height', 'outline', 'width', 'height', 'overflowY', 'overflowX',
							'wordWrap', 'resize'],
		cursorPos		: {},
		get: function (textarea) {
			var rangeData = {text: "", start: 0, end: 0 };
			var html = "";
			if (textarea.setSelectionRange) { // W3C
				textarea.focus();
				rangeData.start = textarea.selectionStart;
				rangeData.end = textarea.selectionEnd;
				rangeData.text = (rangeData.start != rangeData.end) ? textarea.value.substring(rangeData.start, rangeData.end): "";
			} else if (document.selection) { // IE
				textarea.focus();
				var i,
					oS = document.selection.createRange(),
					// Don't: oR = textarea.createTextRange()
					oR = document.body.createTextRange();
				oR.moveToElementText(textarea);

				rangeData.text = oS.text;
				rangeData.bookmark = oS.getBookmark();

				// object.moveStart(sUnit [, iCount])
				// Return Value: Integer that returns the number of units moved.
				for (i = 0; oS.moveStart("character", -1) !== 0; i++) {
					// Why? You can alert(textarea.value.length)
					if (textarea.value.charAt(i) == '\r' ) {
						i++;
					}
				}
				rangeData.start = i;
				rangeData.end = rangeData.text.length + rangeData.start;
			};
			return rangeData;
		},
		set: function (JQtextareaElem, rangeData) {
			var textarea = JQtextareaElem.context;
			var oR, start, end;
			if(!rangeData) {
				//alert("You must get cursor position first.");
				return false;
			};
			textarea.focus();
			if (textarea.setSelectionRange) { // W3C
				textarea.setSelectionRange(rangeData.start, rangeData.end);
			} else if (textarea.createTextRange) { // IE
				oR = textarea.createTextRange();
				// Fixbug : ues moveToBookmark()
				// In IE, if cursor position at the end of textarea, the set function don't work
				if(textarea.value.length === rangeData.start) {
					//alert('hello')
					oR.collapse(false);
					oR.select();
				} else {
					oR.moveToBookmark(rangeData.bookmark);
					oR.select();
				};
			};
		}
	};
	var _textAreaPro = {
		uids	: "",
		url		: "",
		key		: "",
		uid		: 0,
		canAt : false,
		getHtml:function(textarea){
			var beforeHtml = '',afterHtml = '', result = '';
			var pat = /\s/g;
			_cursorUtils.cursorPos = _cursorUtils.get(textarea);

			//html = textarea.value.substring(0, _cursorUtils.cursorPos.end);
			beforeHtml = textarea.value.substring(0, _cursorUtils.cursorPos.end);
			var last = beforeHtml.lastIndexOf('@');
			afterHtml = textarea.value.substring(last+1);
			if(last>=0){
				this.key = beforeHtml.substring(last+1);
				if(pat.test(this.key)){
					this.key = "";
					this.canAt = false;
				}else{
					this.canAt = true;
				}
			}else{
				this.key = "";
				this.canAt = false;
			};
			try{
				result = "<span>" + beforeHtml.substring(0, last) + "</span>";
				result = result.replace(/\ /g, '<span style="white-space:pre-wrap;font-family:Tahoma,宋体;"> </span>');
				result = result.replace(/\n/g, '<br/>');
				result += "<em>@</em>";
				result += "<span type='after'>" + afterHtml + "</span>";
			}catch(e){
				typeof(console) != "undefined" && console.log(e);
			};
			return result;
		}
		,
		getAjaxList: function(i){
			var getKey = this.key,
				content = "";
				if(getKey == ""){
					content = '<div class="autoSuggestList"><ul><li class="suggest_title">选择最近@的人</li>';
				}else{
					content = '<div class="autoSuggestList"><ul>';
				};
				$.ajax({
					url: _textAreaPro.url,
					type: 'GET',
					data:{ 'key':encodeURIComponent(getKey), 'uid':_textAreaPro.uid,'_xiamitoken':_xiamitoken },
					dataType: 'json',
					timeout: 10000,
					error: function(){
						typeof(console) != "undefined" && console.log("error");
					},
					success: function(data){
						(function(index) {
							_cursorUtils.curIndex = 0;
							if(data.status == 0){
								content = '<div class="autoSuggestList"><ul><li class="suggest_title">'+data.info+'</li></ul></div>';
								_cursorUtils.listWrapElem[index].html(content);
								_cursorUtils.listWrapElem[index].show();
								return false;
							}
							if(data.status == 1){
								for(var i=0;i<data.data.length;i++){
									var u = data.data[i],name = u.nick_name, uid = u.id, pic = u.avatar;
									i == 0 ? content +='<li class="on" data-uid="' + uid + '" data-value="'+name+'"><img src="'+pic+'" width="24" height="24"/>'+name+'</li>' : content +='<li data-uid="' + uid + '" data-value="'+name+'"><img src="'+pic+'" width="24" height="24"/>'+name+'</li>';
								};
								content += "</ul></div>";
								_cursorUtils.listWrapElem[index].html(content);
								_cursorUtils.listWrapElem[index].show();
							}
						})(i);
					}
				});
		}
		,
		showSuggest: function ( suggestTarget, targetElem , i) {
			//if (_cursorUtils.targetElem = null ) _cursorUtils.targetElem = $(targetElem);
			var that = this,
				textHtml = that.getHtml(suggestTarget);
			if( that.canAt && _cursorUtils.targetElem ){
				var cssObj = _cursorUtils.targetElem.getStyleArr(_cursorUtils.primaryStyles);
				_cursorUtils.txtShadowElem[i].css(cssObj);
				_cursorUtils.txtShadowElem[i].html( textHtml );

				var cssPro = that.XY(_cursorUtils.txtShadowElem[i], suggestTarget );
				_cursorUtils.listWrapElem[i].css(cssPro);
				that.getAjaxList(i);
				return;
			}
			if( !that.canAt ){
				_cursorUtils.listWrapElem[i].hide();
			}
		}
		,
		inputSuggest: function ( value, uid , i){
			if(!value || !uid){
				_cursorUtils.listWrapElem[i].hide();
				return false;
			}
			_cursorUtils.curIndex = 0;
			var that = this;
			try{
				var v		= _cursorUtils.targetElem.val(),
					v1		= v.substring(0,_cursorUtils.cursorPos.end),
					v2		= v.substring(_cursorUtils.cursorPos.end),
					last	= v1.lastIndexOf("@"),
					str 	= v2.indexOf(" "),
					v3		= v1.substring(0,last+1),
					content	= v3 + value + " " + v2;

				_cursorUtils.cursorPos.end 	 = _cursorUtils.cursorPos.end  + ( value.length - that.key.length+1 );
				_cursorUtils.cursorPos.start = _cursorUtils.cursorPos.start  + (value.length - that.key.length+1 );
				_cursorUtils.targetElem.val( content );
				_cursorUtils.set(_cursorUtils.targetElem, _cursorUtils.cursorPos );
			}catch(e){
				typeof(console) != "undefined" && console.log("inputSuggest error:", e);
			} finally {
				_cursorUtils.listWrapElem[i].hide();
			}
			var input = _cursorUtils.targetElem.next();
				input.val() == "" ? input.val( uid ) : input.val( input.val() + "," + uid);
			//parent.relids = parent.relids == '' ? uid : parent.relids + "," + uid;
			parent.relids = input.val();
			that.uids = parent.relids;
		}
		,
		enterSuggest: function (i) {
			var selectLi = _cursorUtils.listWrapElem[i].find("li.on");
			var value	= selectLi.data("value"),
				uid		= selectLi.data("uid");
			this.inputSuggest( value , uid , i);
			this.key = "";
			this.canAt = false;
		},
		shortcutKey: function( key , i){
			switch(key){
				case 27:
					_cursorUtils.listWrapElem[i].hide();
					_cursorUtils.curIndex = 0;
					break;
				case 38:
					var ulist 		= _cursorUtils.listWrapElem[i].find('li:not(.suggest_title)');
					var count_li	= ulist.size();
						if(_cursorUtils.curIndex <= 0 ) _cursorUtils.curIndex = count_li;
						ulist.removeClass('on');
						_cursorUtils.curIndex -= 1;
						ulist.eq(_cursorUtils.curIndex).addClass('on');
					break;
				case 40:
					var ulist 		= _cursorUtils.listWrapElem[i].find('li:not(.suggest_title)');
					var count_li	= ulist.size();
						ulist.removeClass('on');
						_cursorUtils.curIndex += 1;
						if(_cursorUtils.curIndex >= count_li ){_cursorUtils.curIndex = 0;}
						ulist.eq(_cursorUtils.curIndex).addClass('on');
					break;

			}
		}
		,
		XY: function (txtshadow, parentElem){
			var emlast = $(txtshadow).find("em:last");
			var pElem  = $(parentElem);
			if(emlast.length == 0) return false;
			var t = 20 + emlast.position().top;
			var l = 0  + emlast.position().left;
			var pos = {
				top:t,
				left:l,
				position:"absolute",
				zIndex:10000
			};
			return pos;
		}
	};

	$.fn.autoSuggest = function(url, uid , relids){
		_textAreaPro.url = url;
		_textAreaPro.uid = uid;
		return this.each(function(){
			var index = parseInt($(this).parent().find('input[name="id"]').val());
			//if( _cursorUtils.txtShadowElem[index] == null){
				_cursorUtils.txtShadowElem[index] = $(_cursorUtils.txtShadow);
				_cursorUtils.txtShadowElem[index].appendTo($(this).parent());
			//};
			//if( _cursorUtils.listWrapElem[index] == null){
				_cursorUtils.listWrapElem[index] = $(_cursorUtils.listWrap);
				_cursorUtils.listWrapElem[index].appendTo($(this).parent());
				_cursorUtils.listWrapElem[index].bind("click", function(event){
					event.stopPropagation();
					var li = null;
					if(event.target.nodeName == "LI"){
						li = $(event.target);
					}else{
						li = $(event.target).parent();
					}
					if(li.hasClass("suggest_title")){ return false; }
					var value = li.data("value"),
						uid = li.data("uid");
					_textAreaPro.inputSuggest( value, uid , index);

				});
				_cursorUtils.listWrapElem[index].bind("mousemove", function(event){
					if(event.target.nodeName != "LI") return false;
					if(event.target.className == "suggest_title") return false;
					$(event.target).addClass("on").siblings("li").removeClass("on");
				});
			//};
			var uidInput = $("<input class='relids' type='hidden' name='relids'/>");
			if ( relids != undefined || relids != ""){
				uidInput.val(relids);
			}
			var elem	= $(this),
				myTop	= elem.position().top,
				myLeft	= elem.position().left;
			elem.after( uidInput );
			elem.bind("keydown", function(event){
				var that = this;
				if( event.keyCode == 38 || event.keyCode == 40 || event.keyCode == 27 ){
					_textAreaPro.shortcutKey(event.keyCode, index);
					return false;
				}
				if( event.keyCode == 13 && _textAreaPro.canAt ) {
					_textAreaPro.enterSuggest(index);
					event.preventDefault();
					return false;
				};
				try{clearTimeout(_cursorUtils.timer);}catch(e){};
				_cursorUtils.timer =  setTimeout(function(){
					_textAreaPro.showSuggest( that , elem , index);
				},300);
			});
			elem.bind("mouseup", function(event){
				var that = this;
				_cursorUtils.targetElem = $(this);
				try{clearTimeout(_cursorUtils.timer);}catch(e){};
					_cursorUtils.timer =  setTimeout(function(){
					_textAreaPro.showSuggest( that, elem , index);
				},300);
			});
			elem.bind("blur", function(){
				// _cursorUtils.listWrapElem.hide();
			});
			elem.click(function(event){
				event.stopPropagation();
			});
		});
	};

	$.fn.extend({
		getStyleArr : function(stylesArr) {
			if (this.length == 0) return;
			var arr = {}, thiz = this.context;
			for(var i=0; i < stylesArr.length; i++ ) {
				var casName = stylesArr[i];
				var result = "";
				try{
					result = this.css( casName ) || ($.browser.msie ? thiz.currentStyle[casName] : document.defaultView.getComputedStyle(thiz, null)[casName]);
				}catch(e){};
				arr[casName] = result;

			};
			arr["position"] = "absolute";
			arr["left"] = this.position().left;
			arr["top"] = this.position().top;
			arr["opacity"] = 0;
			arr["text-align"] = "left";
			arr["zIndex"] = -1000;
			return arr;
		}
	});
	$("body").click(function(event){
		try{
			_cursorUtils.listWrapElem.hide();
		}catch(e){}
	});
});$(function() {
	$('#scene').on('mouseenter', '.image', function() {
		$(this).find('.icon').show();
	}).on('mouseleave', '.image', function() {
		$(this).find('.icon').hide();
	});
});/**
$.ajax({
	url:'/task/checkindex',
	type:'GET',
	dataType:'text',
	success:function(data){
		if(data) {
			var arr = data.split(',');
			var showindex = $("#task_showindex li").each(function(i) {
				if(parseInt(arr[i])) $(this).children("a").attr("class","checked");
			});
		}
	}
});
/**/

function joinTask(type,id) {
	var url = '/task/pop/type/'+encodeURIComponent(type)+'/id/'+encodeURIComponent(id);
	showDialog(url);
}var friendTmpl = '<div class="user" data-id="${user_id}"><div class="image"><a href="/u/${user_id}" name_card="${user_id}"><img src="'+_xiamiimg+'/${avatar}" /></a></div><div class="info"><p><a href="/u/${user_id}" name_card="${user_id}" title="${nick_name}">${nick_name}</a>{{if isMusician}}<a href="http://i.xiami.com/index" target="_blank"><b class="icon musician" title="虾米音乐人"></b></a>{{else}}{{if isVip}}<a href="/vip" target="_blank"><b class="icon vip" title="虾米VIP"></b></a>{{/if}}{{/if}}</p><p class="intro">${typeFrom}</p><div class="action"><b class="icon tofollow" data-target="${user_id}" onclick="follow(this);">+关注</b><b class="icon topass" data-target="${user_id}" onclick="pass(this);"></b></div></div></div>';

var follow = function(e) {

	var uid = $(e).data('target'),
		target = $('.user[data-id="'+uid+'"]');

	var ids = '';
	$('#friend .user').each(function() {
	    ids += $(this).data('id') + ',';
	});
	ids = ids.substr(0, ids.length-1);

	$.ajax({
		url : '/friend/attention',
		type : 'get',
		dataType : 'json',
		data : {'uid':uid, 'ids':ids, '_xiamitoken':_xiamitoken},
		success : function(data) {
			if (data.status) {
				if (data.data) {
					$($.tmpl(friendTmpl, data.data)).replaceAll(target);
				}
				else {
					target.remove();
				}
			}
			else {
				alert(data.message);
			}
		}
	});

};

var pass = function(e) {

	var uid = $(e).data('target'),
		target = $('.user[data-id="'+uid+'"]');

	var ids = '';
	$('#friend .user').each(function() {
	    ids += $(this).data('id') + ',';
	});
	ids = ids.substr(0, ids.length-1);

	$.ajax({
		url : '/friend/unlike',
		type : 'get',
		dataType : 'json',
		data : {'uid':uid, 'ids':ids, '_xiamitoken':_xiamitoken},
		success : function(data) {
			if (data.status) {
				if (data.data) {
					$($.tmpl(friendTmpl, data.data)).replaceAll(target);
				}
				else {
					target.remove();
				}
			}
			else {
				alert(data.message);
			}
		}
	});
};

$(function() {

	$('#main .sidebar').on('mouseenter', '#friend .user', function() {
		$(this).addClass('hover');
	}).on('mouseleave', '#friend .user', function() {
		$(this).removeClass('hover');
	});

	var friendPage = 2;
	$('#main .sidebar').on('click', '#friend .tochange', function() {
		$.ajax({
			url : '/friend/recommend/ajax/1',
			type : 'get',
			dataType : 'json',
			data: {'page':friendPage},
			success : function(data) {
				if (data.status) {
					//console.log($.tmpl(friendTmpl, data.data));
					$('#friend .content').html($.tmpl(friendTmpl, data.data));
					friendPage++;
				}
				else {
					alert(data.message);
				}
			}
		});
	});

});
$(function() {

	/* group tab */
	$('#group').on('click', '.action li', function(e) {

		var tab = $(this),
			url = tab.data('url'),
			offset = tab.data('tab');

		var swapContent = $('#group .content_block[data-content="'+groupTab+'"]'),
			content = $('#group .content_block[data-content="'+offset+'"]');

		if (offset!=groupTab) {

			if (!content.length) {

				$.ajax({
					url : url,
					type : 'get',
					dataType : 'json',
					success : function(data) {

						if (url=='/index/mygroup') {
							if (data.data) {
								var mygroup_tmpl = '<li class="mygroup">\
														<a title="${title}" href="/group/${group_id}"><img src="'+_xiamiimg+'/${logo}" /></a>\
														<a class="name" title="${title}" href="/group/${group_id}">${title}</a>\
													</li>';
							}
							else {
								var mygroup_tmpl = '<p class="none"><a href="/group/hotgroups">你还未加入任何小组，赶快去找到组织吧！</a></p>';
							}
							$('#group .content').append('<div data-content="1" class="content_block" style="display:none;"></div>');
							$.tmpl(mygroup_tmpl, data.data).appendTo('#group .content_block[data-content="'+offset+'"]');
						}
						else {
							if (data.data) {
								var hotthread_tmpl = '<li>\
														<a title="${subject}" href="/group/thread-detail/tid/${tid}">${subject}</a>\
														<span>${replies}/${views}</span>\
														<b><a title="${group_name}" href="/group/${group_id}">${group_name}</a></b>\
													</li>';
							}
							else {
								var hotthread_tmpl = '<p class="none"><a href="/group/hotgroups">你还未加入任何小组，赶快去找到组织吧！</a></p>';
							}
							$('#group .content').append('<div data-content="2" class="content_block" style="display:none;"></div>');
							$.tmpl(hotthread_tmpl, data.data).appendTo('#group .content_block[data-content="'+offset+'"]');
						}

						content = $('#group .content_block[data-content="'+offset+'"]');

						swapContent.hide();
						content.show();

					}

				});
			}
			else {

				swapContent.hide();
				content.show();

			}

			$('#group .action li').removeClass('current');
			tab.addClass('current');

			//$('#group .extra a').attr({'href':href});

		}

		groupTab = offset;

	});
	/**/

	/* item hover */
	$('#group').on('mouseenter', '.content li', function() {
		$(this).find('span').hide();
		$(this).find('b').show();
	}).on('mouseleave', '.content li', function() {
		$(this).find('b').hide();
		$(this).find('span').show();
	});
	/**/

});
$(function() {

	var currentTab = 0,
		pageTag = function(e, o) {

			e.preventDefault();

			var tab = o,
				offset = tab.data('tab'),
				spm_c = tab.data('spm_c');

			var swapContent = $('#personal .content_block[data-content="'+currentTab+'"]'),
				content = $('#personal .content_block[data-content="'+offset+'"]');

			if (offset!=currentTab) {

				if (!content.length) {

					$.ajax({
						url : '/index/tag'+encodeURI(offset),
						type : 'get',
						dataType : 'json',
						cache: false,
						success : function(data) {

							//console.log(data.data);

							$('#personal').append('<div data-content="'+offset+'" data-spm="'+spm_c+'" class="content_block" style="display:none;"></div>');

							content = $('#personal .content_block[data-content="'+offset+'"]');

							swapContent.hide();
							content.append(data.data).show();

						}

					});
				}
				else {

					swapContent.hide();
					content.show();

				}

				$('#personalnav .tag').removeClass('current');
				$('#personalnav .tag[data-tab="'+offset+'"]').addClass('current');

			}

			currentTab = offset;

		};

	/* parsonal tab */
	$('#personalnav').on('click', '.tag', function(e) {
		pageTag(e, $(this));
	});
	/**/

	/* parsonal block */
	$('#personal').on('click', '.action .more', function(e) {
		pageTag(e, $(this));
	});
	/**/

});/**
 * change tag
 */
var changeTag = function(e) {

	var tags = '';
	$('#personal .tochange').each(function() {
	    tags += $(this).data('tag') + ',';
	});
	tags = tags.substr(0, tags.length-1);

	var target = $(e).closest('.personal_block');

	$.get('/index/changetag', {'tags':tags}, function(data) {
		if (data) {
			$(data).replaceAll(target);
		}
	});

};function RecommendRoomList() {
    var self = this;

    self.apiUrl = 'http://ihi.xiami.com/listen/recommend-talents';
    self.tpl = '<div class="user" data-uid="${user_id}">\
            <div class="image">\
                <a href="/u/${user_id}" name_card="${user_id}"><img src="${avatar_rul}"></a>\
            </div>\
            <div class="info">\
                <p><a class="nick_name" href="u/${user_id}" name_card="${user_id}">${nick_name}</a>{{html user_type_icon}}</p>\
                <p class="status">{{html status_html}}</p>\
                <div class="action">\
                    <a class="btn_play" href="javascript:;" data-uid=${user_id}>\
                        <span>跟TA听</span>\
                    </a>\
                </div>\
            </div>\
        </div>';
    self.el = null;
    self.pageSize = 6;
};

RecommendRoomList.prototype = {
    init: function(opt) {
        var self = this;

        opt = opt || {};
        self.apiUrl = opt.apiUrl || self.apiUrl;
        self.tpl = opt.tpl || self.tpl;
        self.el = opt.srcNode;
        self.loading = self.el.find('.loading').eq(0);
        self.pageSize = opt.pageSize || self.pageSize;
        self.pageSize = (self.pageSize < 0) ? 0 : self.pageSize;
        self.nickNameLength = opt.nickNameLength || 0;
        self.recordSuffix = opt.recordSuffix || '';
        self._initData();
        self._addEvent();
    },

    _initData: function() {
        var self = this;
        var params = {};

        if (self.nickNameLength) {
            params.length = self.nickNameLength;
        }

        $.ajax({
            dataType: 'jsonp',
            url: self.apiUrl,
            data: params,
            beforeSend: function() {
                // self.loading.css('display', '');
            },
            success: function(rep) {
                if (rep.status) {
                    var data = [];
                    var pageSize = (self.pageSize < rep.data.length) ? self.pageSize : rep.data.length;

                    for (var i = 0; i < pageSize; i++) {
                        var item = rep.data[i];
                        item.avatar_rul = self._getAvatarUrl(item.avatar);
                        item.status_html = self._getStatusHtml(item);
                        item.user_type_icon = self._getUserTypeIcon(item.user_type);
                        data.push(item);
                    }
                    self.el.html($.tmpl(self.tpl, data));
                } else {
                    // console.log(rep);
                }
            },
            error: function(err) {
                // console.log('error', err);
                /*
                $(elem).poshytip('update', '失败，请重试').poshytip('show');
                that.removeClass('praisdLoad');
                */
            }
        });
    },

    _addEvent: function() {
        var self = this;

        self.el.delegate('.btn_play', 'click', function(evt) {
            evt.stopPropagation();
            var userId = $(evt.currentTarget).data('uid');
            if (userId) {
                self._openPlayer(userId);
            }
        });
    },

    _getAvatarUrl: function(avatar) {
        avatar = avatar || 'res/img/default/usr50.gif';
        avatar = (avatar.indexOf('http://') >= 0) ? avatar : ('http://img.xiami.net/' + avatar);
        return avatar;
    },

    _getStatusHtml: function(data) {
        var status = '';

        switch (data.status) {
            case 2:     // 自己在听
            status = '<i class="icon listening"></i>' + data.song.name;
            break;

            case 3:     // 被人跟听
            if (data.follow_num >= 10) {
                status = '听众: <span class="follow-num">' + data.follow_num + '</span>';
            } else {
                status = '<i class="icon listening"></i>' + data.song.name;
            }
            break;

            case 4:     // 跟着别人听
            status = '正在跟<span class="nick-name">' + data.from.nick_name + '</span>听歌';
            break;
        }

        return status;
    },

    _getUserTypeIcon: function(type) {
        var userTypes = [
            {clsName : 'musician', title : '虾米音乐人', url : 'http://i.xiami.com'},
            {clsName : 'vip', title : '虾米VIP', url : '/vip'}
        ];
        var userType = null;
        var html = '';
        var iType = (type) ? type.toString(2) : '0';    // 转化成2进制，2进制对应的每一位代表对应的icon

        for (var i = iType.length - 1; i >= 0; i--) {
            // console.log(i, iType[i], iType.charAt(i), userTypes[iType.length - i - 1]);
            if (iType.charAt(i) == 1) {
                userType = userTypes[iType.length - i - 1];
                break;
            }
        }

        if (userType) {
            html = '<a target="_blank" href="' + userType.url +'">\
                    <b class="icon ' + userType.clsName + '" title="' + userType.title + '"></b >\
                </a>';
        }

        return html;
    },

    _openPlayer: function(userId) {
        var self = this;
        var url = ''
        if (!(/msie (6\.\d+);/i.test(navigator.userAgent))) {
            url = 'http://www.xiami.com/play?uid=' + userId; // for new player
            window.open(url, "xiamiMusicPlayer");
        } else {
            url = 'http://www.xiami.com/song/play?uid=' + userId; // for old player
            window.open(url, "xiamiMusicPlayer", 'width=754,height=645');
        }

        self._record('play_' + self.recordSuffix);
    },

    // 黄金令箭
    _record : function(type) {
        var userid = '&userid=';
        if (_xiamiuser) {
            userid += _xiamiuser.split('"')[0];
        } else {
            userid += 0;
        }
        if (typeof goldlog != 'undefined') {
            goldlog.record('/xiamipc.1.7','','module=room&property=recommend&type=' + type + userid, 'H46777410');
        }
    }
};